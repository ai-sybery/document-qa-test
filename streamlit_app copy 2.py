import streamlit as st
import google.generativeai as genai
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞ - –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ô –ö–õ–Æ–ß
api_key = "AIzaSyCJy8Mh3MDuQy3FxI11PxO5UBhe-sczgdA"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
genai.configure(api_key=api_key)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Gemini
model = genai.GenerativeModel("gemini-1.5-flash")

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
system_prompt = """–í—ã –ø–æ–ª–µ–∑–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ, —Å–∫–∞–∂–∏—Ç–µ: ¬´–Ø –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞." """

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üìÑ Document Question Answering")
st.write(
    "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∏–∂–µ –∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äì Gemini –æ—Ç–≤–µ—Ç–∏—Ç! "
    "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á Google."
)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
uploaded_file = st.file_uploader(
    "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç (.txt, .md –∏–ª–∏ .pdf)", type=("txt", "md", "pdf")
)

# –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞
question = st.text_area(
    "–¢–µ–ø–µ—Ä—å –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ!",
    placeholder="–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –¥–∞—Ç—å –º–Ω–µ –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ?",
    disabled=not uploaded_file,
)


if uploaded_file and question:
    try:
        document = None
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
        if uploaded_file.name.lower().endswith(('.txt', '.md')):
            uploaded_file.seek(0)
            encodings = ['utf-8-sig', 'utf-8', 'cp1251', 'iso-8859-1']
            for encoding in encodings:
                try:
                    uploaded_file.seek(0)
                    document = uploaded_file.read().decode(encoding)
                    break
                except UnicodeDecodeError:
                    continue
        elif uploaded_file.name.lower().endswith('.pdf'):
            import PyPDF2
            try:
                reader = PyPDF2.PdfReader(uploaded_file)
                text = ""
                for page in reader.pages:
                    text += page.extract_text()
                document = text
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ PDF —Ñ–∞–π–ª–∞: {e}")
                document = None
        else:
            st.error("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞")
            document = None


        if document is None:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª.")
        else:
            try:
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Gemini
                prompt = f"""{system_prompt}\n–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç: {document}\n\n–í–æ–ø—Ä–æ—Å: {question}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞."""

                response = model.generate_content(prompt, stream=True)
                time.sleep(17)  # –ó–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏ 429

                # –ü–æ—Ç–æ–∫–æ–≤—ã–π –≤—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞
                response_container = st.empty()
                full_response = ""

                for chunk in response:
                    if chunk.text:
                        full_response += chunk.text
                        response_container.markdown(full_response)

            except Exception as e:
                if "429" in str(e):
                    st.error("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")
                else:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {str(e)}")

    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")